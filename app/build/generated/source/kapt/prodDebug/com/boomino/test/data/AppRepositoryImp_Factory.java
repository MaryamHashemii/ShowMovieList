// Generated by Dagger (https://dagger.dev).
package com.boomino.test.data;

import com.boomino.test.data.local.dao.AppDao;
import com.boomino.test.data.remote.ApiService;
import com.boomino.test.util.NetworkConnectivity;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppRepositoryImp_Factory implements Factory<AppRepositoryImp> {
  private final Provider<ApiService> apiServiceProvider;

  private final Provider<AppDao> appDaoProvider;

  private final Provider<NetworkConnectivity> networkConnectivityProvider;

  public AppRepositoryImp_Factory(Provider<ApiService> apiServiceProvider,
      Provider<AppDao> appDaoProvider, Provider<NetworkConnectivity> networkConnectivityProvider) {
    this.apiServiceProvider = apiServiceProvider;
    this.appDaoProvider = appDaoProvider;
    this.networkConnectivityProvider = networkConnectivityProvider;
  }

  @Override
  public AppRepositoryImp get() {
    return newInstance(apiServiceProvider.get(), appDaoProvider.get(), networkConnectivityProvider.get());
  }

  public static AppRepositoryImp_Factory create(Provider<ApiService> apiServiceProvider,
      Provider<AppDao> appDaoProvider, Provider<NetworkConnectivity> networkConnectivityProvider) {
    return new AppRepositoryImp_Factory(apiServiceProvider, appDaoProvider, networkConnectivityProvider);
  }

  public static AppRepositoryImp newInstance(ApiService apiService, AppDao appDao,
      NetworkConnectivity networkConnectivity) {
    return new AppRepositoryImp(apiService, appDao, networkConnectivity);
  }
}
