// Generated by Dagger (https://dagger.dev).
package com.boomino.test.presentation.video;

import com.boomino.test.common.imageloading.ImageLoadingService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class VideoAdapter_Factory implements Factory<VideoAdapter> {
  private final Provider<ImageLoadingService> imageLoadingServiceProvider;

  public VideoAdapter_Factory(Provider<ImageLoadingService> imageLoadingServiceProvider) {
    this.imageLoadingServiceProvider = imageLoadingServiceProvider;
  }

  @Override
  public VideoAdapter get() {
    return newInstance(imageLoadingServiceProvider.get());
  }

  public static VideoAdapter_Factory create(
      Provider<ImageLoadingService> imageLoadingServiceProvider) {
    return new VideoAdapter_Factory(imageLoadingServiceProvider);
  }

  public static VideoAdapter newInstance(ImageLoadingService imageLoadingService) {
    return new VideoAdapter(imageLoadingService);
  }
}
