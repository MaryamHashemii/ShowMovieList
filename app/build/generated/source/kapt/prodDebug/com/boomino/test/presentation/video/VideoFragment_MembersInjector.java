// Generated by Dagger (https://dagger.dev).
package com.boomino.test.presentation.video;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class VideoFragment_MembersInjector implements MembersInjector<VideoFragment> {
  private final Provider<VideoAdapter> videoAdapterProvider;

  private final Provider<CategoryAdapter> categoryAdapterProvider;

  public VideoFragment_MembersInjector(Provider<VideoAdapter> videoAdapterProvider,
      Provider<CategoryAdapter> categoryAdapterProvider) {
    this.videoAdapterProvider = videoAdapterProvider;
    this.categoryAdapterProvider = categoryAdapterProvider;
  }

  public static MembersInjector<VideoFragment> create(Provider<VideoAdapter> videoAdapterProvider,
      Provider<CategoryAdapter> categoryAdapterProvider) {
    return new VideoFragment_MembersInjector(videoAdapterProvider, categoryAdapterProvider);
  }

  @Override
  public void injectMembers(VideoFragment instance) {
    injectVideoAdapter(instance, videoAdapterProvider.get());
    injectCategoryAdapter(instance, categoryAdapterProvider.get());
  }

  @InjectedFieldSignature("com.boomino.test.presentation.video.VideoFragment.videoAdapter")
  public static void injectVideoAdapter(VideoFragment instance, VideoAdapter videoAdapter) {
    instance.videoAdapter = videoAdapter;
  }

  @InjectedFieldSignature("com.boomino.test.presentation.video.VideoFragment.categoryAdapter")
  public static void injectCategoryAdapter(VideoFragment instance,
      CategoryAdapter categoryAdapter) {
    instance.categoryAdapter = categoryAdapter;
  }
}
