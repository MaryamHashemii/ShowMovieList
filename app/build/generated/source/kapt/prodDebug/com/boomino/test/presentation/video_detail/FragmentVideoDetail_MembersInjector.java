// Generated by Dagger (https://dagger.dev).
package com.boomino.test.presentation.video_detail;

import com.boomino.test.common.imageloading.ImageLoadingService;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FragmentVideoDetail_MembersInjector implements MembersInjector<FragmentVideoDetail> {
  private final Provider<ImageLoadingService> imageLoadingServiceProvider;

  public FragmentVideoDetail_MembersInjector(
      Provider<ImageLoadingService> imageLoadingServiceProvider) {
    this.imageLoadingServiceProvider = imageLoadingServiceProvider;
  }

  public static MembersInjector<FragmentVideoDetail> create(
      Provider<ImageLoadingService> imageLoadingServiceProvider) {
    return new FragmentVideoDetail_MembersInjector(imageLoadingServiceProvider);
  }

  @Override
  public void injectMembers(FragmentVideoDetail instance) {
    injectImageLoadingService(instance, imageLoadingServiceProvider.get());
  }

  @InjectedFieldSignature("com.boomino.test.presentation.video_detail.FragmentVideoDetail.imageLoadingService")
  public static void injectImageLoadingService(FragmentVideoDetail instance,
      ImageLoadingService imageLoadingService) {
    instance.imageLoadingService = imageLoadingService;
  }
}
